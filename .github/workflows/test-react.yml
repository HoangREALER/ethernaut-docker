name: Test
on:
  push:
    branches: [main]
  pull_request: {}

jobs:
  detect-changes:
    name: Detect Changed Folders or New Folders
    runs-on: ubuntu-latest
    outputs:
      changed_folders: ${{ steps.get_changes.outputs.changed_folders }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Changed Folders
        id: get_changes
        run: |
          git pull
          echo "$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})"
          CHANGED_FOLDERS_JSON="$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | cut -d/ -f1 | sort -u)"
          echo "Changed folders: ${CHANGED_FOLDERS_JSON}"
          CHANGED_FOLDERS_JSON="[\"${CHANGED_FOLDERS_JSON}\"]"
          CHANGED_FOLDERS_JSON=$(echo $CHANGED_FOLDERS_JSON | sed 's/\s/","/g')
          #Clean array if empty
          if [ "$CHANGED_FOLDERS_JSON" == '[""]' ]; then
            CHANGED_FOLDERS_JSON="[]"
          fi
          echo $CHANGED_FOLDERS_JSON
          echo "changed_folders=$CHANGED_FOLDERS_JSON" >> $GITHUB_OUTPUT
    
  test-reacts:
    name: Reacts tests
    runs-on: ubuntu-latest
    needs: [detect-changes]
    if: ${{ contains(needs.detect-changes.outputs.changed_folders, 'client') }}
    environment: 
    defaults:
      run:
        working-directory: ./client

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Set variables
        run: |
          VER=$(cat .nvmrc)
          echo "NODE_VERSION=${VER:1}" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Setup Yarn
        run: |
          npm install -g yarn
      
      - name: Install dependencies for React app
        run: yarn install

      # Build smart contracts
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
          working-directory: ./contracts

      - name: Install dependencies and build contracts
        run: |
          forge install
          forge build
        working-directory: ./contracts
      
      - name: Dynamic linking contracts folder
        run: ln -sf ../contracts src/contracts

      - name: Run build and test
        run: yarn build
